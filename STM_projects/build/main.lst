ARM GAS  C:\Users\kus\AppData\Local\Temp\ccsDuptR.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.red,"ax",%progbits
  18              		.align	1
  19              		.global	red
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	red:
  27              	.LFB127:
  28              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/main.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/main.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** #include "cmsis_os.h"
  23:Core/Src/main.c **** #include "gpio.h"
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  26:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* USER CODE END Includes */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
ARM GAS  C:\Users\kus\AppData\Local\Temp\ccsDuptR.s 			page 2


  31:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* USER CODE END PTD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  36:Core/Src/main.c **** /* USER CODE BEGIN PD */
  37:Core/Src/main.c **** /* USER CODE END PD */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  40:Core/Src/main.c **** /* USER CODE BEGIN PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* USER CODE END PM */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE BEGIN PV */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* USER CODE END PV */
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  51:Core/Src/main.c **** void SystemClock_Config(void);
  52:Core/Src/main.c **** void MX_FREERTOS_Init(void);
  53:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* USER CODE END PFP */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  58:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** void red(void *pvParameters) {
  29              		.loc 1 60 30 view -0
  30              		.cfi_startproc
  31              		@ Volatile: function does not return.
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              	.LVL0:
  35              		.loc 1 60 30 is_stmt 0 view .LVU1
  36 0000 08B5     		push	{r3, lr}
  37              	.LCFI0:
  38              		.cfi_def_cfa_offset 8
  39              		.cfi_offset 3, -8
  40              		.cfi_offset 14, -4
  41 0002 09E0     		b	.L2
  42              	.LVL1:
  43              	.L6:
  44              	.LBB4:
  61:Core/Src/main.c **** 	for (;;) {
  62:Core/Src/main.c ****     if( HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_4) == GPIO_PIN_RESET ){
  63:Core/Src/main.c **** 		  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0, GPIO_PIN_SET );
  45              		.loc 1 63 5 is_stmt 1 view .LVU2
  46 0004 0122     		movs	r2, #1
  47 0006 1146     		mov	r1, r2
  48 0008 4FF09040 		mov	r0, #1207959552
  49 000c FFF7FEFF 		bl	HAL_GPIO_WritePin
  50              	.LVL2:
  64:Core/Src/main.c ****       vTaskDelay( 500 / portTICK_RATE_MS );
  51              		.loc 1 64 7 view .LVU3
ARM GAS  C:\Users\kus\AppData\Local\Temp\ccsDuptR.s 			page 3


  52 0010 4FF4FA70 		mov	r0, #500
  53 0014 FFF7FEFF 		bl	vTaskDelay
  54              	.LVL3:
  55              	.L2:
  56              	.LBE4:
  61:Core/Src/main.c **** 	for (;;) {
  57              		.loc 1 61 2 view .LVU4
  62:Core/Src/main.c **** 		  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0, GPIO_PIN_SET );
  58              		.loc 1 62 5 view .LVU5
  62:Core/Src/main.c **** 		  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0, GPIO_PIN_SET );
  59              		.loc 1 62 9 is_stmt 0 view .LVU6
  60 0018 1021     		movs	r1, #16
  61 001a 0848     		ldr	r0, .L7
  62 001c FFF7FEFF 		bl	HAL_GPIO_ReadPin
  63              	.LVL4:
  62:Core/Src/main.c **** 		  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0, GPIO_PIN_SET );
  64              		.loc 1 62 7 view .LVU7
  65 0020 0028     		cmp	r0, #0
  66 0022 EFD0     		beq	.L6
  67              	.LBB5:
  65:Core/Src/main.c ****     }
  66:Core/Src/main.c ****     else{
  67:Core/Src/main.c **** 		  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0, GPIO_PIN_RESET );
  68              		.loc 1 67 5 is_stmt 1 view .LVU8
  69 0024 0022     		movs	r2, #0
  70 0026 0121     		movs	r1, #1
  71 0028 4FF09040 		mov	r0, #1207959552
  72 002c FFF7FEFF 		bl	HAL_GPIO_WritePin
  73              	.LVL5:
  68:Core/Src/main.c ****       vTaskDelay( 500 / portTICK_RATE_MS );
  74              		.loc 1 68 7 view .LVU9
  75 0030 4FF4FA70 		mov	r0, #500
  76 0034 FFF7FEFF 		bl	vTaskDelay
  77              	.LVL6:
  78 0038 EEE7     		b	.L2
  79              	.L8:
  80 003a 00BF     		.align	2
  81              	.L7:
  82 003c 00040048 		.word	1207960576
  83              	.LBE5:
  84              		.cfi_endproc
  85              	.LFE127:
  87              		.section	.text.yellow,"ax",%progbits
  88              		.align	1
  89              		.global	yellow
  90              		.syntax unified
  91              		.thumb
  92              		.thumb_func
  93              		.fpu fpv4-sp-d16
  95              	yellow:
  96              	.LFB128:
  69:Core/Src/main.c ****     }
  70:Core/Src/main.c **** 	}
  71:Core/Src/main.c **** }
  72:Core/Src/main.c **** void yellow(void *pvParameters) {
  97              		.loc 1 72 33 view -0
  98              		.cfi_startproc
ARM GAS  C:\Users\kus\AppData\Local\Temp\ccsDuptR.s 			page 4


  99              		@ Volatile: function does not return.
 100              		@ args = 0, pretend = 0, frame = 0
 101              		@ frame_needed = 0, uses_anonymous_args = 0
 102              	.LVL7:
 103              		.loc 1 72 33 is_stmt 0 view .LVU11
 104 0000 08B5     		push	{r3, lr}
 105              	.LCFI1:
 106              		.cfi_def_cfa_offset 8
 107              		.cfi_offset 3, -8
 108              		.cfi_offset 14, -4
 109 0002 09E0     		b	.L10
 110              	.LVL8:
 111              	.L14:
 112              	.LBB6:
  73:Core/Src/main.c **** 	for (;;) {
  74:Core/Src/main.c ****     if( HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_5) == GPIO_PIN_RESET ){
  75:Core/Src/main.c **** 		  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, GPIO_PIN_SET );
 113              		.loc 1 75 5 is_stmt 1 view .LVU12
 114 0004 0122     		movs	r2, #1
 115 0006 0221     		movs	r1, #2
 116 0008 4FF09040 		mov	r0, #1207959552
 117 000c FFF7FEFF 		bl	HAL_GPIO_WritePin
 118              	.LVL9:
  76:Core/Src/main.c ****       vTaskDelay( 500 / portTICK_RATE_MS );
 119              		.loc 1 76 7 view .LVU13
 120 0010 4FF4FA70 		mov	r0, #500
 121 0014 FFF7FEFF 		bl	vTaskDelay
 122              	.LVL10:
 123              	.L10:
 124              	.LBE6:
  73:Core/Src/main.c **** 	for (;;) {
 125              		.loc 1 73 2 view .LVU14
  74:Core/Src/main.c **** 		  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, GPIO_PIN_SET );
 126              		.loc 1 74 5 view .LVU15
  74:Core/Src/main.c **** 		  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, GPIO_PIN_SET );
 127              		.loc 1 74 9 is_stmt 0 view .LVU16
 128 0018 2021     		movs	r1, #32
 129 001a 0848     		ldr	r0, .L15
 130 001c FFF7FEFF 		bl	HAL_GPIO_ReadPin
 131              	.LVL11:
  74:Core/Src/main.c **** 		  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, GPIO_PIN_SET );
 132              		.loc 1 74 7 view .LVU17
 133 0020 0028     		cmp	r0, #0
 134 0022 EFD0     		beq	.L14
 135              	.LBB7:
  77:Core/Src/main.c ****     }
  78:Core/Src/main.c ****     else{
  79:Core/Src/main.c **** 		  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, GPIO_PIN_RESET );
 136              		.loc 1 79 5 is_stmt 1 view .LVU18
 137 0024 0022     		movs	r2, #0
 138 0026 0221     		movs	r1, #2
 139 0028 4FF09040 		mov	r0, #1207959552
 140 002c FFF7FEFF 		bl	HAL_GPIO_WritePin
 141              	.LVL12:
  80:Core/Src/main.c ****       vTaskDelay( 500 / portTICK_RATE_MS );
 142              		.loc 1 80 7 view .LVU19
 143 0030 4FF4FA70 		mov	r0, #500
ARM GAS  C:\Users\kus\AppData\Local\Temp\ccsDuptR.s 			page 5


 144 0034 FFF7FEFF 		bl	vTaskDelay
 145              	.LVL13:
 146 0038 EEE7     		b	.L10
 147              	.L16:
 148 003a 00BF     		.align	2
 149              	.L15:
 150 003c 00040048 		.word	1207960576
 151              	.LBE7:
 152              		.cfi_endproc
 153              	.LFE128:
 155              		.section	.text.green,"ax",%progbits
 156              		.align	1
 157              		.global	green
 158              		.syntax unified
 159              		.thumb
 160              		.thumb_func
 161              		.fpu fpv4-sp-d16
 163              	green:
 164              	.LFB129:
  81:Core/Src/main.c ****     }
  82:Core/Src/main.c **** 	}
  83:Core/Src/main.c **** }
  84:Core/Src/main.c **** void green(void *pvParameters) {
 165              		.loc 1 84 32 view -0
 166              		.cfi_startproc
 167              		@ Volatile: function does not return.
 168              		@ args = 0, pretend = 0, frame = 0
 169              		@ frame_needed = 0, uses_anonymous_args = 0
 170              	.LVL14:
 171              		.loc 1 84 32 is_stmt 0 view .LVU21
 172 0000 08B5     		push	{r3, lr}
 173              	.LCFI2:
 174              		.cfi_def_cfa_offset 8
 175              		.cfi_offset 3, -8
 176              		.cfi_offset 14, -4
 177              	.LVL15:
 178              	.L18:
  85:Core/Src/main.c **** 	for (;;) {
 179              		.loc 1 85 2 is_stmt 1 discriminator 1 view .LVU22
 180              	.LBB8:
  86:Core/Src/main.c **** 		HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_3);
 181              		.loc 1 86 3 discriminator 1 view .LVU23
 182 0002 0821     		movs	r1, #8
 183 0004 4FF09040 		mov	r0, #1207959552
 184 0008 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 185              	.LVL16:
  87:Core/Src/main.c **** 		vTaskDelay( 1000 / portTICK_RATE_MS );
 186              		.loc 1 87 3 discriminator 1 view .LVU24
 187 000c 4FF47A70 		mov	r0, #1000
 188 0010 FFF7FEFF 		bl	vTaskDelay
 189              	.LVL17:
 190              	.LBE8:
  85:Core/Src/main.c **** 	for (;;) {
 191              		.loc 1 85 8 discriminator 1 view .LVU25
 192 0014 F5E7     		b	.L18
 193              		.cfi_endproc
 194              	.LFE129:
ARM GAS  C:\Users\kus\AppData\Local\Temp\ccsDuptR.s 			page 6


 196              		.section	.text.Error_Handler,"ax",%progbits
 197              		.align	1
 198              		.global	Error_Handler
 199              		.syntax unified
 200              		.thumb
 201              		.thumb_func
 202              		.fpu fpv4-sp-d16
 204              	Error_Handler:
 205              	.LFB132:
  88:Core/Src/main.c **** 	}
  89:Core/Src/main.c **** }
  90:Core/Src/main.c **** 
  91:Core/Src/main.c **** 
  92:Core/Src/main.c **** /* USER CODE END 0 */
  93:Core/Src/main.c **** 
  94:Core/Src/main.c **** /**
  95:Core/Src/main.c ****   * @brief  The application entry point.
  96:Core/Src/main.c ****   * @retval int
  97:Core/Src/main.c ****   */
  98:Core/Src/main.c **** int main(void)
  99:Core/Src/main.c **** {
 100:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 101:Core/Src/main.c **** 
 102:Core/Src/main.c ****   /* USER CODE END 1 */
 103:Core/Src/main.c **** 
 104:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 105:Core/Src/main.c **** 
 106:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 107:Core/Src/main.c ****   HAL_Init();
 108:Core/Src/main.c **** 
 109:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 110:Core/Src/main.c **** 
 111:Core/Src/main.c ****   /* USER CODE END Init */
 112:Core/Src/main.c **** 
 113:Core/Src/main.c ****   /* Configure the system clock */
 114:Core/Src/main.c ****   SystemClock_Config();
 115:Core/Src/main.c **** 
 116:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 117:Core/Src/main.c **** 
 118:Core/Src/main.c ****   /* USER CODE END SysInit */
 119:Core/Src/main.c **** 
 120:Core/Src/main.c ****   /* Initialize all configured peripherals */
 121:Core/Src/main.c ****   MX_GPIO_Init();
 122:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 123:Core/Src/main.c **** 
 124:Core/Src/main.c **** 	xTaskCreate( red, "LEDTask1", 100, NULL, 1, NULL );
 125:Core/Src/main.c **** 	xTaskCreate( yellow, "LEDTask2", 100, NULL, 1, NULL );
 126:Core/Src/main.c **** 	xTaskCreate( green, "LEDTask3", 100, NULL, 1, NULL );
 127:Core/Src/main.c **** 
 128:Core/Src/main.c **** 
 129:Core/Src/main.c ****   /* USER CODE END 2 */
 130:Core/Src/main.c **** 
 131:Core/Src/main.c ****   /* Init scheduler */
 132:Core/Src/main.c ****   osKernelInitialize();  /* Call init function for freertos objects (in freertos.c) */
 133:Core/Src/main.c ****   MX_FREERTOS_Init();
 134:Core/Src/main.c ****   /* Start scheduler */
 135:Core/Src/main.c ****   osKernelStart();
ARM GAS  C:\Users\kus\AppData\Local\Temp\ccsDuptR.s 			page 7


 136:Core/Src/main.c **** 
 137:Core/Src/main.c ****   /* We should never get here as control is now taken by the scheduler */
 138:Core/Src/main.c ****   /* Infinite loop */
 139:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 140:Core/Src/main.c ****   while (1)
 141:Core/Src/main.c ****   {
 142:Core/Src/main.c **** 
 143:Core/Src/main.c **** 
 144:Core/Src/main.c ****     /* USER CODE END WHILE */
 145:Core/Src/main.c **** 
 146:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 147:Core/Src/main.c ****   }
 148:Core/Src/main.c ****   /* USER CODE END 3 */
 149:Core/Src/main.c **** }
 150:Core/Src/main.c **** 
 151:Core/Src/main.c **** /**
 152:Core/Src/main.c ****   * @brief System Clock Configuration
 153:Core/Src/main.c ****   * @retval None
 154:Core/Src/main.c ****   */
 155:Core/Src/main.c **** void SystemClock_Config(void)
 156:Core/Src/main.c **** {
 157:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 158:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 159:Core/Src/main.c **** 
 160:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 161:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 162:Core/Src/main.c ****   */
 163:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 164:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 165:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 166:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 167:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 168:Core/Src/main.c ****   {
 169:Core/Src/main.c ****     Error_Handler();
 170:Core/Src/main.c ****   }
 171:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 172:Core/Src/main.c ****   */
 173:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 174:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 175:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 176:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 177:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 178:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 179:Core/Src/main.c **** 
 180:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 181:Core/Src/main.c ****   {
 182:Core/Src/main.c ****     Error_Handler();
 183:Core/Src/main.c ****   }
 184:Core/Src/main.c **** }
 185:Core/Src/main.c **** 
 186:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 187:Core/Src/main.c **** 
 188:Core/Src/main.c **** /* USER CODE END 4 */
 189:Core/Src/main.c **** 
 190:Core/Src/main.c **** /**
 191:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 192:Core/Src/main.c ****   * @retval None
ARM GAS  C:\Users\kus\AppData\Local\Temp\ccsDuptR.s 			page 8


 193:Core/Src/main.c ****   */
 194:Core/Src/main.c **** void Error_Handler(void)
 195:Core/Src/main.c **** {
 206              		.loc 1 195 1 view -0
 207              		.cfi_startproc
 208              		@ Volatile: function does not return.
 209              		@ args = 0, pretend = 0, frame = 0
 210              		@ frame_needed = 0, uses_anonymous_args = 0
 211              		@ link register save eliminated.
 196:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 197:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 198:Core/Src/main.c ****   __disable_irq();
 212              		.loc 1 198 3 view .LVU27
 213              	.LBB9:
 214              	.LBI9:
 215              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
ARM GAS  C:\Users\kus\AppData\Local\Temp\ccsDuptR.s 			page 9


  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
ARM GAS  C:\Users\kus\AppData\Local\Temp\ccsDuptR.s 			page 10


  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 216              		.loc 2 140 27 view .LVU28
 217              	.LBB10:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 218              		.loc 2 142 3 view .LVU29
 219              		.syntax unified
 220              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 221 0000 72B6     		cpsid i
 222              	@ 0 "" 2
 223              		.thumb
 224              		.syntax unified
 225              	.L21:
 226              	.LBE10:
 227              	.LBE9:
 199:Core/Src/main.c ****   while (1)
ARM GAS  C:\Users\kus\AppData\Local\Temp\ccsDuptR.s 			page 11


 228              		.loc 1 199 3 discriminator 1 view .LVU30
 200:Core/Src/main.c ****   {
 201:Core/Src/main.c ****   }
 229              		.loc 1 201 3 discriminator 1 view .LVU31
 199:Core/Src/main.c ****   while (1)
 230              		.loc 1 199 9 discriminator 1 view .LVU32
 231 0002 FEE7     		b	.L21
 232              		.cfi_endproc
 233              	.LFE132:
 235              		.section	.text.SystemClock_Config,"ax",%progbits
 236              		.align	1
 237              		.global	SystemClock_Config
 238              		.syntax unified
 239              		.thumb
 240              		.thumb_func
 241              		.fpu fpv4-sp-d16
 243              	SystemClock_Config:
 244              	.LFB131:
 156:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 245              		.loc 1 156 1 view -0
 246              		.cfi_startproc
 247              		@ args = 0, pretend = 0, frame = 64
 248              		@ frame_needed = 0, uses_anonymous_args = 0
 249 0000 00B5     		push	{lr}
 250              	.LCFI3:
 251              		.cfi_def_cfa_offset 4
 252              		.cfi_offset 14, -4
 253 0002 91B0     		sub	sp, sp, #68
 254              	.LCFI4:
 255              		.cfi_def_cfa_offset 72
 157:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 256              		.loc 1 157 3 view .LVU34
 157:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 257              		.loc 1 157 22 is_stmt 0 view .LVU35
 258 0004 2822     		movs	r2, #40
 259 0006 0021     		movs	r1, #0
 260 0008 06A8     		add	r0, sp, #24
 261 000a FFF7FEFF 		bl	memset
 262              	.LVL18:
 158:Core/Src/main.c **** 
 263              		.loc 1 158 3 is_stmt 1 view .LVU36
 158:Core/Src/main.c **** 
 264              		.loc 1 158 22 is_stmt 0 view .LVU37
 265 000e 0023     		movs	r3, #0
 266 0010 0193     		str	r3, [sp, #4]
 267 0012 0293     		str	r3, [sp, #8]
 268 0014 0393     		str	r3, [sp, #12]
 269 0016 0493     		str	r3, [sp, #16]
 270 0018 0593     		str	r3, [sp, #20]
 163:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 271              		.loc 1 163 3 is_stmt 1 view .LVU38
 163:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 272              		.loc 1 163 36 is_stmt 0 view .LVU39
 273 001a 0223     		movs	r3, #2
 274 001c 0693     		str	r3, [sp, #24]
 164:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 275              		.loc 1 164 3 is_stmt 1 view .LVU40
ARM GAS  C:\Users\kus\AppData\Local\Temp\ccsDuptR.s 			page 12


 164:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 276              		.loc 1 164 30 is_stmt 0 view .LVU41
 277 001e 0123     		movs	r3, #1
 278 0020 0A93     		str	r3, [sp, #40]
 165:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 279              		.loc 1 165 3 is_stmt 1 view .LVU42
 165:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 280              		.loc 1 165 41 is_stmt 0 view .LVU43
 281 0022 1023     		movs	r3, #16
 282 0024 0B93     		str	r3, [sp, #44]
 166:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 283              		.loc 1 166 3 is_stmt 1 view .LVU44
 167:Core/Src/main.c ****   {
 284              		.loc 1 167 3 view .LVU45
 167:Core/Src/main.c ****   {
 285              		.loc 1 167 7 is_stmt 0 view .LVU46
 286 0026 06A8     		add	r0, sp, #24
 287 0028 FFF7FEFF 		bl	HAL_RCC_OscConfig
 288              	.LVL19:
 167:Core/Src/main.c ****   {
 289              		.loc 1 167 6 view .LVU47
 290 002c 68B9     		cbnz	r0, .L26
 173:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 291              		.loc 1 173 3 is_stmt 1 view .LVU48
 173:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 292              		.loc 1 173 31 is_stmt 0 view .LVU49
 293 002e 0F23     		movs	r3, #15
 294 0030 0193     		str	r3, [sp, #4]
 175:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 295              		.loc 1 175 3 is_stmt 1 view .LVU50
 175:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 296              		.loc 1 175 34 is_stmt 0 view .LVU51
 297 0032 0021     		movs	r1, #0
 298 0034 0291     		str	r1, [sp, #8]
 176:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 299              		.loc 1 176 3 is_stmt 1 view .LVU52
 176:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 300              		.loc 1 176 35 is_stmt 0 view .LVU53
 301 0036 0391     		str	r1, [sp, #12]
 177:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 302              		.loc 1 177 3 is_stmt 1 view .LVU54
 177:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 303              		.loc 1 177 36 is_stmt 0 view .LVU55
 304 0038 0491     		str	r1, [sp, #16]
 178:Core/Src/main.c **** 
 305              		.loc 1 178 3 is_stmt 1 view .LVU56
 178:Core/Src/main.c **** 
 306              		.loc 1 178 36 is_stmt 0 view .LVU57
 307 003a 0591     		str	r1, [sp, #20]
 180:Core/Src/main.c ****   {
 308              		.loc 1 180 3 is_stmt 1 view .LVU58
 180:Core/Src/main.c ****   {
 309              		.loc 1 180 7 is_stmt 0 view .LVU59
 310 003c 01A8     		add	r0, sp, #4
 311 003e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 312              	.LVL20:
 180:Core/Src/main.c ****   {
ARM GAS  C:\Users\kus\AppData\Local\Temp\ccsDuptR.s 			page 13


 313              		.loc 1 180 6 view .LVU60
 314 0042 20B9     		cbnz	r0, .L27
 184:Core/Src/main.c **** 
 315              		.loc 1 184 1 view .LVU61
 316 0044 11B0     		add	sp, sp, #68
 317              	.LCFI5:
 318              		.cfi_remember_state
 319              		.cfi_def_cfa_offset 4
 320              		@ sp needed
 321 0046 5DF804FB 		ldr	pc, [sp], #4
 322              	.L26:
 323              	.LCFI6:
 324              		.cfi_restore_state
 169:Core/Src/main.c ****   }
 325              		.loc 1 169 5 is_stmt 1 view .LVU62
 326 004a FFF7FEFF 		bl	Error_Handler
 327              	.LVL21:
 328              	.L27:
 182:Core/Src/main.c ****   }
 329              		.loc 1 182 5 view .LVU63
 330 004e FFF7FEFF 		bl	Error_Handler
 331              	.LVL22:
 332              		.cfi_endproc
 333              	.LFE131:
 335              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 336              		.align	2
 337              	.LC0:
 338 0000 4C454454 		.ascii	"LEDTask1\000"
 338      61736B31 
 338      00
 339 0009 000000   		.align	2
 340              	.LC1:
 341 000c 4C454454 		.ascii	"LEDTask2\000"
 341      61736B32 
 341      00
 342 0015 000000   		.align	2
 343              	.LC2:
 344 0018 4C454454 		.ascii	"LEDTask3\000"
 344      61736B33 
 344      00
 345              		.section	.text.main,"ax",%progbits
 346              		.align	1
 347              		.global	main
 348              		.syntax unified
 349              		.thumb
 350              		.thumb_func
 351              		.fpu fpv4-sp-d16
 353              	main:
 354              	.LFB130:
  99:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 355              		.loc 1 99 1 view -0
 356              		.cfi_startproc
 357              		@ Volatile: function does not return.
 358              		@ args = 0, pretend = 0, frame = 0
 359              		@ frame_needed = 0, uses_anonymous_args = 0
 360 0000 00B5     		push	{lr}
 361              	.LCFI7:
ARM GAS  C:\Users\kus\AppData\Local\Temp\ccsDuptR.s 			page 14


 362              		.cfi_def_cfa_offset 4
 363              		.cfi_offset 14, -4
 364 0002 83B0     		sub	sp, sp, #12
 365              	.LCFI8:
 366              		.cfi_def_cfa_offset 16
 107:Core/Src/main.c **** 
 367              		.loc 1 107 3 view .LVU65
 368 0004 FFF7FEFF 		bl	HAL_Init
 369              	.LVL23:
 114:Core/Src/main.c **** 
 370              		.loc 1 114 3 view .LVU66
 371 0008 FFF7FEFF 		bl	SystemClock_Config
 372              	.LVL24:
 121:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 373              		.loc 1 121 3 view .LVU67
 374 000c FFF7FEFF 		bl	MX_GPIO_Init
 375              	.LVL25:
 124:Core/Src/main.c **** 	xTaskCreate( yellow, "LEDTask2", 100, NULL, 1, NULL );
 376              		.loc 1 124 2 view .LVU68
 377 0010 0024     		movs	r4, #0
 378 0012 0194     		str	r4, [sp, #4]
 379 0014 0125     		movs	r5, #1
 380 0016 0095     		str	r5, [sp]
 381 0018 2346     		mov	r3, r4
 382 001a 6422     		movs	r2, #100
 383 001c 0D49     		ldr	r1, .L31
 384 001e 0E48     		ldr	r0, .L31+4
 385 0020 FFF7FEFF 		bl	xTaskCreate
 386              	.LVL26:
 125:Core/Src/main.c **** 	xTaskCreate( green, "LEDTask3", 100, NULL, 1, NULL );
 387              		.loc 1 125 2 view .LVU69
 388 0024 0194     		str	r4, [sp, #4]
 389 0026 0095     		str	r5, [sp]
 390 0028 2346     		mov	r3, r4
 391 002a 6422     		movs	r2, #100
 392 002c 0B49     		ldr	r1, .L31+8
 393 002e 0C48     		ldr	r0, .L31+12
 394 0030 FFF7FEFF 		bl	xTaskCreate
 395              	.LVL27:
 126:Core/Src/main.c **** 
 396              		.loc 1 126 2 view .LVU70
 397 0034 0194     		str	r4, [sp, #4]
 398 0036 0095     		str	r5, [sp]
 399 0038 2346     		mov	r3, r4
 400 003a 6422     		movs	r2, #100
 401 003c 0949     		ldr	r1, .L31+16
 402 003e 0A48     		ldr	r0, .L31+20
 403 0040 FFF7FEFF 		bl	xTaskCreate
 404              	.LVL28:
 132:Core/Src/main.c ****   MX_FREERTOS_Init();
 405              		.loc 1 132 3 view .LVU71
 406 0044 FFF7FEFF 		bl	osKernelInitialize
 407              	.LVL29:
 133:Core/Src/main.c ****   /* Start scheduler */
 408              		.loc 1 133 3 view .LVU72
 409 0048 FFF7FEFF 		bl	MX_FREERTOS_Init
 410              	.LVL30:
ARM GAS  C:\Users\kus\AppData\Local\Temp\ccsDuptR.s 			page 15


 135:Core/Src/main.c **** 
 411              		.loc 1 135 3 view .LVU73
 412 004c FFF7FEFF 		bl	osKernelStart
 413              	.LVL31:
 414              	.L29:
 140:Core/Src/main.c ****   {
 415              		.loc 1 140 3 discriminator 1 view .LVU74
 147:Core/Src/main.c ****   /* USER CODE END 3 */
 416              		.loc 1 147 3 discriminator 1 view .LVU75
 140:Core/Src/main.c ****   {
 417              		.loc 1 140 9 discriminator 1 view .LVU76
 418 0050 FEE7     		b	.L29
 419              	.L32:
 420 0052 00BF     		.align	2
 421              	.L31:
 422 0054 00000000 		.word	.LC0
 423 0058 00000000 		.word	red
 424 005c 0C000000 		.word	.LC1
 425 0060 00000000 		.word	yellow
 426 0064 18000000 		.word	.LC2
 427 0068 00000000 		.word	green
 428              		.cfi_endproc
 429              	.LFE130:
 431              		.text
 432              	.Letext0:
 433              		.file 3 "c:\\users\\kus\\files\\needed_software\\gcc-arm-none-eabi-10-2020-q4-major\\arm-none-eabi
 434              		.file 4 "c:\\users\\kus\\files\\needed_software\\gcc-arm-none-eabi-10-2020-q4-major\\arm-none-eabi
 435              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303x8.h"
 436              		.file 6 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc.h"
 437              		.file 7 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 438              		.file 8 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h"
 439              		.file 9 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
 440              		.file 10 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
 441              		.file 11 "Core/Inc/gpio.h"
 442              		.file 12 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h"
 443              		.file 13 "<built-in>"
ARM GAS  C:\Users\kus\AppData\Local\Temp\ccsDuptR.s 			page 16


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\kus\AppData\Local\Temp\ccsDuptR.s:18     .text.red:00000000 $t
C:\Users\kus\AppData\Local\Temp\ccsDuptR.s:26     .text.red:00000000 red
C:\Users\kus\AppData\Local\Temp\ccsDuptR.s:82     .text.red:0000003c $d
C:\Users\kus\AppData\Local\Temp\ccsDuptR.s:88     .text.yellow:00000000 $t
C:\Users\kus\AppData\Local\Temp\ccsDuptR.s:95     .text.yellow:00000000 yellow
C:\Users\kus\AppData\Local\Temp\ccsDuptR.s:150    .text.yellow:0000003c $d
C:\Users\kus\AppData\Local\Temp\ccsDuptR.s:156    .text.green:00000000 $t
C:\Users\kus\AppData\Local\Temp\ccsDuptR.s:163    .text.green:00000000 green
C:\Users\kus\AppData\Local\Temp\ccsDuptR.s:197    .text.Error_Handler:00000000 $t
C:\Users\kus\AppData\Local\Temp\ccsDuptR.s:204    .text.Error_Handler:00000000 Error_Handler
C:\Users\kus\AppData\Local\Temp\ccsDuptR.s:236    .text.SystemClock_Config:00000000 $t
C:\Users\kus\AppData\Local\Temp\ccsDuptR.s:243    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\kus\AppData\Local\Temp\ccsDuptR.s:336    .rodata.main.str1.4:00000000 $d
C:\Users\kus\AppData\Local\Temp\ccsDuptR.s:346    .text.main:00000000 $t
C:\Users\kus\AppData\Local\Temp\ccsDuptR.s:353    .text.main:00000000 main
C:\Users\kus\AppData\Local\Temp\ccsDuptR.s:422    .text.main:00000054 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
vTaskDelay
HAL_GPIO_ReadPin
HAL_GPIO_TogglePin
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
xTaskCreate
osKernelInitialize
MX_FREERTOS_Init
osKernelStart
